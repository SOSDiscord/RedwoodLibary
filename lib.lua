-- This file was generated using Luraph Obfuscator v13.5.4

do return(function(xU,XU,gU,DU,hU,mU,oU,zU,TU,FU,tU,WU,nU,rU,YU,wU,GU,fU,bU,EU,cU,dU,kU,SU,QU,OU,NU,VU,PU,IU,MU,lU,...)local u,v,a=lU,pcall,hU;local LU,h,j=0,nil,(nil);local q=rU.bnot;repeat do if LU~=0X0000 then j=NU.sub;LU=0X2;continue;else do h=NU.rep;end;LU=0x1;end;end;until LU>=0X2;local s,k=nil,nil;local Q=(setfenv);for qU=0,1 do if qU~=0X0000 then k=xU;continue;else s=WU;continue;end;end;local l,r=nil,nil;for Kb=0x00000,1 do if Kb~=0x0 then r=OU;continue;else l=string.char;continue;end;end;local S=(next);local W=(table.insert);local A=(kU);local L,H,i,m=PU,nil,nil,(nil);local b,O=SU,(rawget);for TT=0,0x2 do do if TT<=0 then do H=mU;end;else if TT==0x01 then i=bU;else do m=DU;end;continue;end;end;end;end;local D=(NU.unpack);LU=0X6;local f,P,R,sU,Y,F,B=nil,nil,nil,nil,nil,nil,nil;repeat do if LU<=2 then do if not(LU<=0)then if LU==1 then R=NU.byte;LU=5;else F=4294967296;LU=0x3;continue;end;else P=fU.wrap;LU=0X1;end;end;else if not(LU<=4)then do if LU==5 then sU=function(...)return u("#",...),{...};end;do LU=0X0004;end;else do f=QU;end;LU=0X0;continue;end;end;else do if LU==0x3 then do B=YU;end;LU=7;else Y=f();LU=2;end;end;end;end;end;until LU==7;LU=0;local y=nil;while LU<=0x001 do if LU==0X0 then LU=0X1;continue;else do y={[0X8]=false,[0X4]=wU,[0X0007]=3,[cU]=IU,[0X002]=2,[0X03]=9,[4]=0x1,[6]=0x2,[9]=1,[0X1]=0.030403637486394186,[0X0009]=0X3,[1]=0x5,[8]=0X03};end;do LU=2;end;end;end;do LU=0X4;end;local c,g,I,w,t,G,o=nil,nil,nil,nil,nil,nil,(nil);do repeat if LU<=3 then if LU<=1 then if LU~=0x0 then w=0x1;LU=0;else c=r(j(c,5),'\.\.',function(en)do if R(en,tU)==72 then for Kb=0,0X0001 do if Kb~=0X0000 then do return"";end;else I=s(j(en,cU,1));end;end;else local jX=(l(s(en,0X00010)));do if not(I)then return jX;else local XW=nil;local aW=0X00001;do repeat do if aW==0X00000 then I=VU;do break;end;else XW=h(jX,I);aW=0x0;do continue;end;end;end;until(false);end;return XW;end;end;end;end;end);LU=0X2;end;else if LU~=0X2 then g={[0]=1};do LU=0x5;end;else t=function()local O0=0;local H0=nil;while O0<2 do if O0~=0X0 then do w=w+1;end;O0=0x2;else H0=R(c,w,w);O0=0X1;end;end;return H0;end;LU=0X6;end;end;elseif LU<=5 then if LU~=4 then do LU=0x1;end;continue;else ccontinue;end;else if LU~=6 then o=0X0002^GU;break;else G=0X80000000;LU=0X0007;end;end;until(false);end;local K,d={7,0X0006,0x0001},(G-1);do LU=0X2;end;local V,T,M,X=nil,nil,nil,(nil);do while LU<0X00005 do if not(LU<=1)then if LU<=0X2 then do local Hc=(0x02);for IA=0X001,31 do do g[IA]=Hc;end;do Hc=Hc*0X00002;end;end;end;LU=0X0;else if LU==3 then X=function()local mw,Jw=nil,(nil);for sA=0,0x2 do if sA<=0X0 then mw,Jw=D("<d",c,w);continue;elseif sA==0X1 then do w=Jw;end;else return mw;end;end;end;LU=0X5;continue;else do T=function()local yD,tD,TD=1,nil,nil;while 0.556049399685921 do if yD<=0 then return tD;else if yD~=1 then w=TD;yD=0;else do tD,TD=D("\<\i\056",c,w);end;yD=2;continue;end;end;end;end;end;LU=1;end;end;else do if LU==0 then V=function()local PL,YL=nil,nil;for AJ=0,2 do do if AJ<=0X00000 then do PL,YL=D("\<\I4",c,w);end;else do if AJ==1 then w=YL;else return PL;end;end;end;end;end;end;LU=0x4;continue;else M=FU;LU=0X03;do continue;end;end;end;end;end;end;LU=0;local N,JU=nil,nil;repeat if LU~=0X0 then JU=cU;break;else do N=NU.match;end;do LU=1;end;end;until false;local z=F-1;local x,U=setmetatable,(bit32.rshift);LU=0x00001;local E,e=nil,nil;do while true do if LU~=0 then E=function(Og,vg,Yg)local Qg=(Og/g[vg])%g[Yg];Qg=Qg-Qg%1;return Qg;end;LU=0;continue;else e=function()local Nr=0;local mr=0;repeat local Nx=(R(c,w,w));do w=w+1;end;mr=i(mr,H(L(Nx,127),Nr));if L(Nx,128)~=0X00000 then else return mr;end;do Nr=Nr+7;end;until false;end;break;end;end;end;local C=t();local Z=(t());local BU=function(Aj)local sj,Mj,Vj,Pj=0,nil,nil,(nil);do while sj<0X3 do if not(sj<=0)then do if sj==0X1 then Vj=M(Mj[0x1],Z);sj=2;else Pj=M(Mj[0X2],Z);do sj=3;end;end;end;else Mj={R(c,w,w+3)};sj=1;continue;end;end;end;local Cj=(M(Mj[0X3],Z));local Gj=M(Mj[0X4],Z);Z=(229*Z+Aj)%0X000100;w=w+0x4;return Gj*0X1000000+Cj*0x10000+Pj*256+Vj;end;local J=type;local p=function()local LM=0x2;local GM=(nil);repeat if not(LM<=0X00)then if LM~=0X1 then GM=e();do LM=0;end;else do return GM;end;end;else if not(GM>d)then else do return GM-F;end;end;do LM=0x1;end;end;until false;end;local vU=({});local uU=function(EX)local mX,KX=nil,nil;for MH=0X000,4 do if MH<=1 then if MH==0 then mX=V();else KX="";continue;end;elseif MH<=2 then for TS=1,mX,0X1F3d do local mS,HS=nil,(nil);local eS=0;repeat if not(eS<=0X1)then if not(eS<=0X00002)then if eS==3 then if mS>mX then do mS=mX;end;end;eS=2;continue;else for HJ=1,#HS do local MJ=(0X00);repeat if MJ==0x00 then(HS)[HJ]=M(HS[HJ],C);MJ=0X00001;continue;else C=(EX*C+231)%256;MJ=0X2;end;until MJ>0X1;end;eS=1;continue;end;else HS={R(c,w+TS-0X0001,w+mS-cU)};eS=4;continue;end;else if eS==0 then do mS=TS+0X1f3D-0X01;end;do eS=0X3;end;else KX=KX..l(b(HS));break;end;end;until(false);end;continue;else do if MH~=3 then return KX;else w=w+mX;end;end;end;end;end;LU=4;local aU,AU,jU,RU=nil,nil,nil,nil;do while LU~=5 do do if LU<=1 then do if LU~=0 then LU=0X0;else function AU(rr,Lr,Cr)local ur=Lr[6];local Wr,Zr,yr,kr=Lr[0X8],Lr[0X3],Lr[7],(Lr[0x09]);local vr,Er=Lr[1],Lr[4];local wr=(x({},{__mode='\118'}));local Qr=(nil);local gr=(Lr[2]);if gr~=1 then Qr=function(...)local SV={};local DV=(0x1);local NV=(0X0);local iV=(f());local IV,ZV=sU(...);IV=IV-0X1;for zb=0,IV do if not(Er>zb)then break;else do(SV)[zb]=ZV[zb+0X1];end;end;end;do aU[2]=Lr;end;aU[3]=SV;local hV=(iV==Y and rr or iV);if not yr then ZV=nil;else if not(kr)then else(SV)[Er]={n=IV>=Er and IV-Er+0X001 or 0X0,b(ZV,Er+1,IV+0x1)};end;end;do if hV==iV then else Q(Qr,hV);end;end;local eV,GV,JV,OV=v(function()do while'\G\067\054\w\h'do local ok=ur[DV];local Ck=ok[4];do DV=DV+0X1;end;if Ck<0X2D then if Ck>=0X00016 then if Ck<0X21 then do if not(Ck<0X1b)then if Ck<0X1e then do if not(Ck>=0x0001c)then local Td=ok[0X7];local xd=ok[6];NV=Td+xd-1;repeat local A_,X_=wr,(SV);if#A_>0X0 then local U5=({});for H7,z7 in S,A_ do for I5,L5 in S,z7 do if L5[0X0001]==X_ and L5[0X2]>=0x0 then local Dd=(L5[0X2]);if not U5[Dd]then(U5)[Dd]={X_[Dd]};end;do(L5)[1]=U5[Dd];end;(L5)[0X2]=0X00001;end;end;end;end;until true;return true,Td,xd;else do if Ck~=29 then if not(SV[ok[0X6]]<SV[ok[1]])then DV=ok[0x7];end;else SV[ok[7]][SV[ok[0x6]]]=SV[ok[0x1]];end;end;end;end;else if not(Ck<31)then if Ck==32 then local TI=(ok[0x7]);(SV[TI])(SV[TI+1]);NV=TI-1;else local mJ=(ok[0X7]);local uJ=P(function(...)(m)();for zn,In in...do m(true,zn,In);end;end);uJ(SV[mJ],SV[mJ+0X1],SV[mJ+0X2]);do NV=mJ;end;(SV)[mJ]=uJ;do DV=ok[0X6];end;end;else do(hV)[ok[2]]=SV[ok[7]];end;end;end;else do if Ck<24 then do if Ck~=0X17 then do if ok[0X00001]==68 then do DV=DV-0X01;end;do ur[DV]={[0X00006]=(ok[6]-26),[0X00004]=0x30,[7]=(ok[0X7]-26)};end;else repeat local Wx,kx=wr,(SV);if not(#Wx>0x0)then else local ph={};for zF,yF in S,Wx do for xm,Km in S,yF do if Km[0X1]==kx and Km[0X2]>=0 then local jr=Km[2];if not(not ph[jr])then else(ph)[jr]={kx[jr]};end;Km[0X00001]=ph[jr];do Km[2]=1;end;end;end;end;end;until true;local Z1=ok[0x007];return false,Z1,Z1+ok[6]-2;end;end;else if ok[0X00001]==139 then do DV=DV-1;end;(ur)[DV]={[6]=(ok[6]-165),[0X7]=(ok[7]-165),[0X4]=20};else(SV)[ok[7]]=not SV[ok[0X6]];end;end;end;else if not(Ck>=25)then do(SV[ok[0X00007]])[ok[2]]=ok[0X00005];end;else if Ck~=0X1A then local uV=(Cr[ok[6]]);uV[1][uV[0X00002]]=SV[ok[7]];else local Ax=ok[0X7];local Jx,nx=SV[Ax],((ok[0X01]-0X1)*50);for cN=0x1,NV-Ax do Jx[nx+cN]=SV[Ax+cN];end;end;end;end;end;end;end;else if Ck>=39 then if Ck>=42 then if not(Ck>=43)then do SV[ok[0X7]]=SV[ok[6]]~=SV[ok[1]];end;else if Ck==0x2c then if SV[ok[6]]~=ok[5]then else DV=ok[7];end;else local lC=ok[7];local WC,wC=SV[lC]();if not(WC)then else do DV=ok[6];end;SV[lC+3]=wC;end;end;end;else if not(Ck<0x28)then if Ck~=41 then local bw=(vr[ok[6]]);local gw=(bw[0X5]);local Xw=(#gw);local Kw=(nil);if not(Xw>0X0)then else Kw={};for Bx=0X1,Xw do local Dx=(gw[Bx]);do if Dx[1]~=0X00000 then(Kw)[Bx-0X1]=Cr[Dx[2]];else do Kw[Bx-0X0001]={SV,Dx[0X2]};end;end;end;end;(W)(wr,Kw);end;SV[ok[7]]=AU(hV,bw,Kw);else SV[ok[7]][SV[ok[0X6]]]=ok[5];end;else do(SV)[ok[0X7]]=ok[2];end;end;end;else do if not(Ck<36)then do if not(Ck<0X000025)then do if Ck~=38 then(SV)[ok[7]]=SV[ok[0X6]]^SV[ok[0x00001]];else local mu=ok[0X07];local Su,xu,Lu=SV[mu]();if not(Su)then else(SV)[mu+1]=xu;SV[mu+2]=Lu;DV=ok[0x6];end;end;end;else do SV[ok[7]]=true;end;end;end;else do if Ck<34 then local Gv=ok[7];local kv=SV[Gv+0x1];local dv=SV[Gv];local Yv=SV[Gv+2];(SV)[Gv]=P(function()for sL=dv,kv,Yv do m(true,sL);end;end);do DV=ok[0x06];end;else do if Ck==0X00023 then local br=(ok[7]);local Jr,sr=SV[br]();if Jr then(SV)[br+0X1]=sr;DV=ok[0X6];end;else do if SV[ok[0x6]]~=SV[ok[1]]then DV=ok[7];end;end;end;end;end;end;end;end;end;end;else do if Ck>=0xb then do if Ck<16 then if not(Ck>=13)then if Ck==12 then if ok[1]==0X000018 then DV=DV-1;do(ur)[DV]={[7]=(ok[7]-133),[0x6]=(ok[0X006]-133),[0x04]=0X9};end;elseif ok[1]==160 then DV=DV-0x1;ur[DV]={[4]=0X036,[0X7]=(ok[7]-0X10),[0x00006]=(ok[0x6]-16)};else repeat local qi,pi,ni=wr,SV,ok[0X0007];if not(#qi>0X00000)then else local LC={};for mV,FV in S,qi do for M7,i7 in S,FV do if i7[1]==pi and i7[2]>=ni then local Yr=i7[0X2];if not LC[Yr]then(LC)[Yr]={pi[Yr]};end;(i7)[0X1]=LC[Yr];i7[2]=1;end;end;end;end;until true;end;else local dQ=(ok[0X7]);SV[dQ]=SV[dQ](b(SV,dQ+0X00001,NV));do NV=dQ;end;end;else if not(Ck<0X000E)then do if Ck==0xf then local uX=Cr[ok[6]];do(SV)[ok[0X7]]=uX[0X1][uX[2]];end;else local jf=(ok[0X07]);SV[jf](SV[jf+1],SV[jf+0x2]);do NV=jf-1;end;end;end;else if ok[1]==0x3C then DV=DV-1;ur[DV]={[0X6]=(ok[0X6]-0xc),[0x4]=16,[7]=(ok[0X0007]-12)};else repeat local o1,U1=wr,(SV);if#o1>0X0 then local L5={};for a0,W0 in S,o1 do for ZL,eL in S,W0 do if not(eL[1]==U1 and eL[0X00002]>=0)then else local lx=eL[0X2];if not(not L5[lx])then else do L5[lx]={U1[lx]};end;end;(eL)[0X1]=L5[lx];do eL[2]=0x001;end;end;end;end;end;until true;return;end;end;end;else if not(Ck>=19)then if Ck<17 then do repeat local k6,Z6=wr,(SV);if#k6>0 then local bG={};for gP,bP in S,k6 do for cZ,gZ in S,bP do do if not(gZ[0X1]==Z6 and gZ[0X002]>=0)then else local AV=(gZ[0x00002]);if not bG[AV]then(bG)[AV]={Z6[AV]};end;gZ[1]=bG[AV];(gZ)[2]=1;end;end;end;end;end;until true;end;return false,ok[7],NV;else if Ck~=0X00012 then(SV)[ok[7]]=SV[ok[6]]%SV[ok[1]];else(SV)[ok[0X00007]]=SV[ok[0x6]][ok[5]];end;end;else do if Ck<20 then local be=(ok[7]);do SV[be]=SV[be](SV[be+0X1],SV[be+0X0002]);end;do NV=be;end;else if Ck~=0X00015 then if ok[1]==52 then DV=DV-0X1;ur[DV]={[4]=0x00040,[0X7]=(ok[0X7]-0X06e),[6]=(ok[0x6]-110)};else(SV)[ok[0x7]]=SV[ok[0X06]];end;else local Kf=(ok[1]);local wf,Jf=ok[0X07],(ok[6]);if Jf~=0 then do NV=wf+Jf-0X1;end;end;local Gf,uf=nil,(nil);if Jf~=1 then Gf,uf=sU(SV[wf](b(SV,wf+0X1,NV)));else Gf,uf=sU(SV[wf]());end;do if Kf==1 then NV=wf-0X1;else do if Kf==0X0 then Gf=Gf+wf-0x1;do NV=Gf;end;else Gf=wf+Kf-0x2;NV=Gf+0X1;end;end;local GI=(0X0);for dR=wf,Gf do GI=GI+1;(SV)[dR]=uf[GI];end;end;end;end;end;end;end;end;end;else if Ck<0X5 then if Ck<0X2 then if Ck==1 then local nh=(ok[0X07]);NV=nh+ok[6]-1;SV[nh]=SV[nh](b(SV,nh+1,NV));NV=nh;else SV[ok[0X7]]=U(SV[ok[6]],SV[ok[0X0001]]);end;else if not(Ck>=0X0003)then do(SV)[ok[7]]=i(SV[ok[6]],SV[ok[1]]);end;else if Ck~=4 then local sz=(ok[7]);local Lz,fz=SV[sz],(ok[0x00001]-1)*50;for gi=0X1,ok[6]do Lz[fz+gi]=SV[sz+gi];end;else aU[ok[6]]=SV[ok[0X7]];end;end;end;else if Ck<8 then if Ck>=0X00006 then do if Ck==0X7 then local EC=(ok[7]);local vC,yC=SV[EC]();if vC then for RC=1,ok[1]do do SV[EC+RC]=yC[RC];end;end;DV=ok[0X6];end;else if ok[0X1]==0X5F then DV=DV-0x1;do(ur)[DV]={[4]=0X0000D,[7]=(ok[0x0007]-137),[0X6]=(ok[0x6]-137)};end;else SV[ok[7]]=nil;end;end;end;else local Hr=ok[6];local dr=(SV[Hr]);do for Td=Hr+0X1,ok[0x1]do dr=dr..SV[Td];end;end;SV[ok[7]]=dr;end;else if Ck>=9 then if Ck~=10 then if ok[0X1]==65 then DV=DV-1;(ur)[DV]={[0X7]=(ok[7]-163),[6]=(ok[6]-163),[0X4]=0xD};else for To=ok[0X7],ok[6]do SV[To]=nil;end;end;else(SV)[ok[7]]=SV[ok[0X6]]~=ok[5];end;else NV=ok[0x7];SV[NV]();do NV=NV-1;end;end;end;end;end;end;end;else if Ck<0X44 then if Ck>=56 then if not(Ck<62)then if Ck<65 then if Ck<63 then if SV[ok[0x6]]<SV[ok[1]]then DV=ok[7];end;else if Ck==0X40 then if ok[0x1]==0X26 then DV=DV-0x1;(ur)[DV]={[7]=(ok[0X7]-161),[6]=(ok[6]-161),[0x4]=13};else SV[ok[7]]=#SV[ok[0X6]];end;else local QN=ok[0x00007];do for Tn=QN,QN+(ok[6]-0X1)do do SV[Tn]=ZV[Er+(Tn-QN)+1];end;end;end;end;end;else do if not(Ck>=0x42)then(SV)[ok[7]]=ok[0X2];else if Ck==67 then repeat local nS,AS=wr,(SV);do if not(#nS>0)then else local wD={};for fg,Ag in S,nS do for Bn,Zn in S,Ag do if not(Zn[1]==AS and Zn[0X2]>=0X0)then else local J_=Zn[0X00002];do if not(not wD[J_])then else do(wD)[J_]={AS[J_]};end;end;end;(Zn)[0X0001]=wD[J_];Zn[2]=0x1;end;end;end;end;end;until true;return true,ok[7],0;else do SV[ok[0X007]]=SV[ok[6]]-SV[ok[0x1]];end;end;end;end;end;elseif Ck>=59 then if Ck>=60 then if Ck~=0x3D then DV=ok[6];else local rQ=IV-Er;local qQ=ok[0x7];if not(rQ<0)then else rQ=-1;end;for ro=qQ,qQ+rQ do SV[ro]=ZV[Er+(ro-qQ)+1];end;NV=qQ+rQ;end;else do(SV)[ok[0X07]]=q(SV[ok[6]]);end;end;else if not(Ck>=0X39)then(SV)[ok[7]]=hV[ok[0X2]];else if Ck~=58 then do SV[ok[0X7]]=SV[ok[0X6]]>SV[ok[1]];end;else do SV[ok[0x7]]=SV[ok[0x6]]<SV[ok[1]];end;end;end;end;else do if Ck<0x00032 then if Ck<47 then if Ck~=0X2E then if SV[ok[0X00006]]==ok[0X0005]then else DV=ok[7];end;else local bC=(ok[0x07]);SV[bC](b(SV,bC+0X01,NV));do NV=bC-1;end;end;elseif Ck>=48 then if Ck~=49 then SV[ok[0X07]]=-SV[ok[0X6]];else local qE=SV[ok[6]]/SV[ok[1]];(SV)[ok[7]]=qE-qE%0x00001;end;else(SV[ok[7]])[ok[0x2]]=SV[ok[0X1]];end;else do if not(Ck>=53)then do if Ck>=0X33 then if Ck~=52 then(SV)[ok[7]]=L(SV[ok[6]],SV[ok[1]]);else do if not(not(SV[ok[6]]<=SV[ok[1]]))then else DV=ok[7];end;end;end;else if ok[0X0001]==0X99 then DV=DV-0X1;(ur)[DV]={[7]=(ok[0X07]-207),[0X004]=6,[6]=(ok[0X00006]-207)};else if not SV[ok[7]]then DV=ok[0X6];end;end;end;end;else if not(Ck<54)then do if Ck~=0X000037 then if ok[0x1]==0X00062 then DV=DV-1;(ur)[DV]={[0X4]=0X14,[0X7]=(ok[7]-0X03),[0x06]=(ok[0X006]-3)};else repeat local o_,d_=wr,(SV);do if not(#o_>0)then else local qG=({});for Dq,jq in S,o_ do for fZ,rZ in S,jq do if not(rZ[1]==d_ and rZ[2]>=0)then else local XC=(rZ[2]);if not qG[XC]then qG[XC]={d_[XC]};end;do rZ[0X1]=qG[XC];end;rZ[0X2]=0X0001;end;end;end;end;end;until'\M\(';local tD=ok[0X7];return false,tD,tD;end;else(SV)[ok[0X00007]]=SV[ok[0x0006]]+SV[ok[0X1]];end;end;else SV[ok[7]]={b({},0X1,ok[0X6])};end;end;end;end;end;end;else if not(Ck<79)then if not(Ck<0x0055)then do if Ck>=88 then do if Ck<89 then SV[ok[0X7]]=H(SV[ok[6]],SV[ok[1]]);else if Ck==0X5A then local Wo=ok[7];NV=Wo+ok[0X6]-1;SV[Wo](b(SV,Wo+1,NV));do NV=Wo-1;end;else(SV)[ok[7]]=SV[ok[6]][SV[ok[1]]];end;end;end;else if Ck>=0x56 then if Ck~=87 then local YQ=(ok[7]);(SV)[YQ]=SV[YQ](SV[YQ+1]);NV=YQ;else if not(SV[ok[7]])then else DV=ok[6];end;end;else do(SV)[ok[0X7]]={};end;end;end;end;else if Ck>=82 then if Ck<0X053 then(SV)[ok[7]]=SV[ok[0X00006]]<=SV[ok[0X1]];else if Ck~=0X54 then SV[ok[7]]=aU[ok[0X6]];else local OG=(ok[6]);SV[ok[0x7]]=SV[OG]..SV[OG+1];end;end;else do if not(Ck<0X050)then do if Ck~=81 then(SV)[ok[0X7]]=false;else do SV[ok[0x007]]=SV[ok[6]]==SV[ok[1]];end;end;end;else(SV)[ok[7]]=SV[ok[0X6]]/SV[ok[0X001]];end;end;end;end;else if Ck<73 then do if not(Ck<70)then do if Ck<0X0047 then local BR=ok[7];local yR=P(function(...)m();for p5 in...do m(true,p5);end;end);(yR)(SV[BR],SV[BR+1],SV[BR+0X2]);NV=BR;SV[BR]=yR;do DV=ok[0X006];end;elseif Ck==72 then do SV[ok[7]]=SV[ok[0x6]]>=SV[ok[0X1]];end;else SV[ok[0X7]]=SV[ok[6]]*SV[ok[1]];end;end;else do if Ck==0X045 then local bO=ok[7];local LO=(P(function(...)m();for T0,k0,x0,G0,D0,F0,q0,X0,e0,P0 in...do m(true,{T0,k0,x0,G0,D0,F0,q0,X0,e0,P0});end;end));LO(SV[bO],SV[bO+0X01],SV[bO+0X2]);do NV=bO;end;do SV[bO]=LO;end;DV=ok[6];else do SV[ok[7]]=SV[ok[6]]%ok[5];end;end;end;end;end;else do if Ck>=76 then if not(Ck<77)then do if Ck==78 then if SV[ok[6]]~=SV[ok[1]]then else do DV=ok[7];end;end;else do SV[ok[7]]=M(SV[ok[6]],SV[ok[0x1]]);end;end;end;elseif SV[ok[6]]<=SV[ok[1]]then DV=ok[0X7];end;else if not(Ck<0x004a)then if Ck==75 then repeat local DZ,mZ=wr,SV;do if#DZ>0x00000 then local eg={};for ON,iN in S,DZ do for fJ,sJ in S,iN do if sJ[0X1]==mZ and sJ[2]>=0x00000 then local oN=sJ[0X2];if not eg[oN]then eg[oN]={mZ[oN]};end;sJ[1]=eg[oN];do sJ[2]=1;end;end;end;end;end;end;until true;do return true,ok[0X0007],1;end;else local Hj=(ok[7]);local fj=(SV[ok[6]]);(SV)[Hj+0X01]=fj;(SV)[Hj]=fj[ok[0X5]];end;else if not(SV[ok[6]]<=ok[5])then DV=ok[7];end;end;end;end;end;end;end;end;end;end;end);if not(eV)then if J(GV)=="string"then if N(GV,'\097\116\116\101m\p\116\ \116o\ y\105e\108\d\ a\cr\os\s\ \109\e\116\097\m\e\116\104\111\d\/\C\%\045\099\097\l\l\ b\o\117\110\100a\114y')then return coroutine.yield();end;do if N(GV,"^.-:%d+: ")then A("Luraph Script:"..(Zr[DV-1]or"\(\105n\116\ern\097\108\041").."\058 "..a(GV),0X0);else(A)(GV,0X0);end;end;else(A)(GV,0x0);end;else do if GV then if OV~=1 then return SV[JV](b(SV,JV+0X1,NV));else do return SV[JV]();end;end;else if JV then return b(SV,JV,OV);end;end;end;end;end;else Qr=function(...)local JM=1;local mM=(f());local aM,NM=sU(...);local bM={};do aM=aM-1;end;for dt=0x0,aM do if Er>dt then bM[dt]=NM[dt+1];else break;end;end;(aU)[2]=Lr;aU[3]=bM;local WM=((mM==Y and rr or mM));local VM=(0);if not yr then NM=nil;else if kr then do bM[Er]={n=aM>=Er and aM-Er+0X0001 or 0X00000,b(NM,Er+1,aM+1)};end;end;end;if WM~=mM then(Q)(Qr,WM);end;local BM,MM,hM,SM=v(function()do while",\068}\101x\k\044\040"do local s3=ur[JM];local U3=(s3[4]);JM=JM+0X1;do if U3<0X0009 then if not(U3<4)then do if U3>=6 then if not(U3<7)then if U3~=0X8 then do(bM)[s3[7]]=WM[s3[2]];end;do s3=ur[JM];end;JM=JM+1;do(bM)[0]=bM[s3[6]][s3[5]];end;JM=JM+1;do JM=JM+1;end;s3=ur[JM];JM=JM+0X1;local JI=Cr[s3[0X6]];(bM)[0x1]=JI[1][JI[0X2]];s3=ur[JM];JM=JM+1;local dI=s3[7];do bM[dI]=bM[dI](bM[dI+1]);end;VM=dI;s3=ur[JM];JM=JM+0X1;if not bM[s3[0X07]]then JM=s3[6];end;else do bM[s3[7]]=s3[2];end;end;else do JM=s3[0X6];end;end;else if U3==5 then(bM)[s3[7]]=bM[s3[6]]/bM[s3[0X0001]];else(bM[s3[7]])[bM[s3[6]]]=bM[s3[1]];end;end;end;else if not(U3>=0x2)then if U3==0X1 then(bM)[s3[7]]=bM[s3[6]]-bM[s3[0X0001]];else end;else do if U3==0x03 then bM[s3[7]]={b({},0X00001,s3[6])};else do if not(not(bM[s3[6]]<bM[s3[1]]))then else JM=s3[7];end;end;end;end;end;end;elseif U3<13 then if U3>=0Xb then if U3==0Xc then bM[s3[7]]=q(bM[s3[6]]);else bM[s3[0x7]]=WM[s3[0x2]];end;else if U3==10 then for QT=s3[0X7],s3[6]do(bM)[QT]=nil;end;else local Zh=vr[s3[6]];local Dh=(Zh[0x05]);local wh=(nil);local Uh=(#Dh);if Uh>0 then do wh={};end;for Eo=1,Uh do local Zo=Dh[Eo];do if Zo[0X01]~=0X0 then(wh)[Eo-1]=Cr[Zo[0X2]];else do(wh)[Eo-0x1]={bM,Zo[0x2]};end;end;end;end;(W)(wr,wh);end;do bM[s3[0x7]]=AU(WM,Zh,wh);end;end;end;else if not(U3<15)then if not(U3>=0X10)then bM[s3[7]]=WM[s3[2]];s3=ur[JM];JM=JM+1;local hY=Cr[s3[6]];do(bM)[s3[7]]=hY[1][hY[2]];end;do JM=JM+1;end;JM=JM+1;do s3=ur[JM];end;local nY=(s3[0X7]);JM=JM+1;local WY=0X4;local NY=(s3[0X6]);if NY~=0 then VM=nY+NY-1;end;local uY,JY=nil,(nil);if NY==1 then uY,JY=sU(bM[nY]());else uY,JY=sU(bM[nY](b(bM,nY+0x1,VM)));end;if WY~=0x01 then do if WY==0 then uY=uY+nY-1;VM=uY;else uY=nY+WY-2;do VM=uY+1;end;end;end;local lA=0X00;for vu=nY,uY do lA=lA+0X001;(bM)[vu]=JY[lA];end;else VM=nY-1;end;JM=JM+1;JM=JM+1;s3=ur[JM];do JM=JM+0x001;end;nY=s3[7];local cY=P(function(...)(m)();for Cv,pv in...do(m)(true,Cv,pv);end;end);(cY)(bM[nY],bM[nY+0x1],bM[nY+0X2]);VM=nY;(bM)[nY]=cY;JM=s3[0x6];else if U3==0X000011 then repeat local f1,n1=wr,bM;if not(#f1>0X0)then else local cj={};for Or,Rr in S,f1 do for na,da in S,Rr do if not(da[0X1]==n1 and da[2]>=0X0)then else local GZ=(da[0X2]);if not(not cj[GZ])then else(cj)[GZ]={n1[GZ]};end;do da[0X1]=cj[GZ];end;(da)[0X2]=1;end;end;end;end;until true;return;else bM[s3[0X7]]=bM[s3[6]]>=bM[s3[1]];end;end;else if U3==14 then local hv=(Cr[s3[0X6]]);do bM[0X3]=hv[0X1][hv[2]];end;do s3=ur[JM];end;JM=JM+0x001;(bM)[s3[7]]=bM[s3[0X6]][s3[0X00005]];JM=JM+1;(bM)[0X00004]=bM[2];s3=ur[JM];JM=JM+0x1;local ov=(s3[0X7]);(bM[ov])(bM[ov+1]);do VM=ov-1;end;JM=JM+1;JM=JM+0X01;else local oa=(s3[0X7]);local ha,ra,ga=bM[oa]();if ha then bM[oa+0X1]=ra;bM[oa+0X2]=ga;JM=s3[6];end;end;end;end;end;end;end;end);do if BM then if MM then if SM==0X0001 then return bM[hM]();else return bM[hM](b(bM,hM+1,VM));end;else if hM then return b(bM,hM,SM);end;end;else if J(MM)=="string"then do if not(N(MM,'att\e\m\p\116 \116\111 \y\105\e\108\d \097\cro\s\s\ \109et\097\109et\104o\100\047\C\%-\c\097\l\108\ \098\111un\100ar\121'))then else return coroutine.yield();end;end;if N(MM,"^.-:%d+: ")then A("Luraph Script:"..(Zr[JM-1]or"(internal)")..": "..a(MM),0);else A(MM,0X0);end;else(A)(MM,0);end;end;end;end;end;(Q)(Qr,rr);return Qr;end;LU=2;end;end;else do if not(LU<=0x2)then if LU~=0X3 then aU={};LU=0X1;else RU=jU();LU=0X5;continue;end;else function jU()local qD=nil;local VD=(0x00);while 0.9378934919996561 do if VD~=0 then qD={};break;else do VD=1;end;end;end;local KD=({});local rD=({{},nil,{},nil,nil,{},nil,nil,nil});VD=0X00004;local TD,QD,sD,kD,FD,mD,iD,nD=nil,nil,nil,nil,nil,nil,nil,(nil);while VD<=0x15 do if not(VD<=0Xa)then if VD<=15 then do if VD<=12 then if VD~=0XB then(rD)[0x09]=E(FD,2,0X1)~=0x0;VD=0x02;continue;else for Fo=oU,QD-0x1 do do(sD)[Fo]=jU();end;end;VD=18;end;else if VD<=13 then kD=V();VD=9;else if VD==0Xe then do nD=V()-0X2f30;end;VD=22;else(rD)[0X8]=e();VD=0X1;end;end;end;end;else if VD<=18 then if not(VD<=0x10)then if VD==0X000011 then(rD)[0Xf]=V();do VD=16;end;else(rD)[0X00C]=t();VD=0X00D;continue;end;else rD[0XD]=V();VD=0X006;end;else if not(VD<=0X13)then if VD==0x000014 then(rD)[4]=e();VD=0X00015;else(rD)[5]=qD;VD=3;do continue;end;end;else QD=V()-0x0011c15;VD=0Xa;continue;end;end;end;else do if VD<=0X00004 then if not(VD<=0X1)then if not(VD<=0X002)then if VD~=3 then TD=1;do VD=20;end;else for hm=1,e()do do qD[hm]={t(),e()};end;end;do VD=0x7;end;continue;end;else mD=rD[6];VD=0X08;end;elseif VD~=0X00000 then do(rD)[2]=e();end;do VD=0X0;end;continue;else rD[10]=t();VD=0X11;end;else do if VD<=0X7 then if VD<=5 then(rD)[7]=E(FD,0X1,cU)~=0X0;VD=0XC;else if VD~=6 then rD[0xf]=t();do VD=0X13;end;continue;else FD=t();VD=0x5;continue;end;end;elseif not(VD<=0X0008)then do if VD==9 then for uV=1,kD do local zV=1;local dV,cV=nil,nil;do repeat if zV~=0X0 then dV=V();zV=0x0;do continue;end;else do cV=V();end;zV=2;continue;end;until zV>=2;end;local BV=nil;for h2=0X00,1 do if h2==0 then BV=V();else for nF=dV,cV do(rD[0X3])[nF]=BV;end;end;end;end;VD=15;continue;else sD=rD[cU];do VD=11;end;end;end;else iD={};VD=0Xe;end;end;end;end;end;end;for n9=1,nD do do(mD)[n9]={[zU]=0X44c21443,[0X0006]=p(),[nU]=dU,[0X4]='\039r\[}\032w\11160',[gU]=t(),[1]=0.05132184646549842,[0X2]="",[7]=p(),[4]=e(),[tU]=t(),[cU]=p(),[0X003]=t()};end;end;local ZD=(V()-EU);do VD=0x02;end;local RD,PD=nil,(nil);repeat if not(VD<=1)then do if not(VD<=0x2)then if VD==3 then for XE=cU,nD do local sE=1;local QE=nil;while sE<0X00002 do if sE==0x000 then for gg,rg in ipairs(K)do local tg=y[rg];local vg=(QE[tg]);if vg==0x8 then local Lw,qw,nw=0X0,nil,nil;while Lw<3 do do if not(Lw<=0)then do if Lw==0X1 then if nw then(QE)[tg]=nw[0x1];local it=nw[2];do(it)[#it+1]={QE,tg};end;end;Lw=0X3;continue;else nw=iD[qw];Lw=0X1;continue;end;end;else qw=KD[QE[rg]];do Lw=0X02;end;end;end;end;elseif vg==0x7 then do(QE)[rg]=XE+QE[rg]+0X0001;end;end;end;do sE=0X002;end;continue;else QE=rD[6][XE];sE=0;continue;end;end;end;do VD=4;end;else return rD;end;else RD=t();VD=0;end;end;elseif VD~=0X0 then do for Fu=0X0001,ZD do local Ou,Gu,Su=nil,nil,(nil);for hI=0,0X7 do if not(hI<=0x3)then if not(hI<=0X00005)then if hI~=6 then if PD then do for go=0,0x1 do if go==0x00000 then vU[JU]=Su;continue;else JU=JU+1;end;end;end;end;else do TD=TD+1;end;end;else if hI~=0X004 then do(iD)[TD]=Su;end;else do Su={Ou,{}};end;continue;end;end;else if hI<=0x1 then if hI~=0 then Gu=t();continue;else Ou=nil;do continue;end;end;else if hI~=0X0002 then if Gu==5 then Ou=j(uU(RD),6);elseif Gu==229 then do Ou=j(uU(RD),X()+V());end;elseif Gu==TU then Ou=XU;elseif Gu==147 then Ou=X()+V();elseif Gu==0X000ad then Ou=j(uU(RD),MU);elseif Gu==172 then Ou=true;elseif Gu==31 then Ou=j(uU(RD),V());elseif Gu==0Xa0 then Ou=T();elseif Gu==0X00067 then do Ou=j(uU(RD),V());end;elseif Gu==25 then Ou=V();elseif Gu~=190 then else Ou=X();end;continue;else KD[Fu-1]=TD;continue;end;end;end;end;end;end;do VD=0X3;end;continue;else PD=t()~=0X0;VD=1;do continue;end;end;until false;end;do LU=0X3;end;continue;end;end;end;end;end;end;LU=0X0001;do repeat if not(LU<=0x0)then do if LU==1 then do(aU)[1]=vU;end;LU=0X2;else do vU=VU;end;do LU=0;end;do continue;end;end;end;else return AU(Y,RU,VU)(...);end;until false;end;end)(rawset,false,0x5,coroutine.yield,tostring,bit32.lshift,0,4,0X1b,bit32.bxor,0X00002,tonumber,7,bit32,assert,';\060\+\106\121\)\d\118',52,coroutine,bit32.bor,0x98c3,0X1,"~\p\046\109x\095u\120\068",error,unpack,getfenv,string.gsub,string,nil,bit32.band,true,6,select,...);end;
